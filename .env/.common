# File System
export ase_install_path=/workspace/sw/chzhou/build/ase
export workspace=/workspace/sw/chzhou
export build=/workspace/sw/chzhou/build
export linux_install=/workspace/sw/chzhou/build/linux
export uboot_install=/workspace/sw/chzhou/build/uboot
export rte_install=/workspace/sw/chzhou/build/rte
export dpdk_install=/workspace/sw/chzhou/build/iwa-rte-dpdk
export qemu_install=/workspace/sw/chzhou/build/qemu/checkout
export shim_lib_install=/workspace/sw/chzhou/build/shim-library/iwa-rte-shim-library
export local=/workspace/sw/chzhou/local

export dsploadbalance_trunk=/workspace/sw/chzhou/svn/src/trunk/sde/samples/AXC6732/DspLoadBalance
export axm56xx_peripheral_testing=/workspace/sw/chzhou/svn/test/trunk/sde/peripherals/AXM56xx_Peripheral_Testing
export script=/workspace/sw/chzhou/workspace/script
export svn=/workspace/sw/chzhou/svn
export debug=/workspace/sw/chzhou/workspace/debugging
export cmd=/workspace/sw/chzhou/commands
export garbage=/workspace/sw/chzhou/garbage
export env=/workspace/sw/chzhou/.env/
export tmp=/workspace/sw/chzhou/temp

#set console
stty columns 100 rows 10
shopt -s checkwinsize
export PS1="\[\033[01;94m\][\W@\h]\[\033[0m\]"

export TERM=xterm-256color
export LS_COLORS='di=4:fi=0:ln=33'

#alias
alias ls='ls --color -c'
alias t='telnet'
alias cp='cp -i'
alias mv='mv -i'

alias v='/usr/bin/vim'
alias vi='/usr/bin/vim'
alias vim='/usr//bin/vim'
alias vimdiff='/usr/bin/vimdiff'

alias lg='login.exp'

alias mca='make clean all'
alias sld='source ./ncp.env;ncpDriver ncp update'

alias tenv='source /home/chzhou_ws/workspace/script/test.env'
alias tmuxw='tmux a -t workspace' 
alias ll='ls -l'
alias lla='ls -la'
alias llt='ls -lt'
alias llat='ls -lat'

#functions
gp ()                                                
{                                                    
    grep "$1" "$2" "$3" "$4" -nRH --color --exclude="*\.svn*"
}                                                    

# do ". acd_func.sh"
# acd_func 1.0.5, 10-nov-2004
# petar marinov, http:/geocities.com/h2428, this is public domain

cd_func ()
{
  local x2 the_new_dir adir index
  local -i cnt

  if [[ $1 ==  "--" ]]; then
    dirs -v
    return 0
  fi

  the_new_dir=$1
  [[ -z $1 ]] && the_new_dir=$HOME

  if [[ ${the_new_dir:0:1} == '-' ]]; then
    #
    # Extract dir N from dirs
    index=${the_new_dir:1}
    [[ -z $index ]] && index=1
    adir=$(dirs +$index)
    [[ -z $adir ]] && return 1
    the_new_dir=$adir
  fi

  #
  # '~' has to be substituted by ${HOME}
  [[ ${the_new_dir:0:1} == '~' ]] && the_new_dir="${HOME}${the_new_dir:1}"

  #
  # Now change to the new dir and add to the top of the stack
  pushd "${the_new_dir}" > /dev/null
  [[ $? -ne 0 ]] && return 1
  the_new_dir=$(pwd)

  #
  # Trim down everything beyond 11th entry
  popd -n +11 2>/dev/null 1>/dev/null

  #
  # Remove any other occurence of this dir, skipping the top of the stack
  for ((cnt=1; cnt <= 10; cnt++)); do
    x2=$(dirs +${cnt} 2>/dev/null)
    [[ $? -ne 0 ]] && return 0
    [[ ${x2:0:1} == '~' ]] && x2="${HOME}${x2:1}"
    if [[ "${x2}" == "${the_new_dir}" ]]; then
      popd -n +$cnt 2>/dev/null 1>/dev/null
      cnt=cnt-1
    fi
  done

  return 0
}

alias cd=cd_func

if [[ $BASH_VERSION > "2.05a" ]]; then
  # ctrl+w shows the menu
  bind -x "\"\C-w\":cd_func -- ;"
fi

